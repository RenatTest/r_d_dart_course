// ignore_for_file: dead_code

void main() {
  // –ú–∞—Ç–µ–º–∞—Ç–∏—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏
  // mathOperatorsExample();

  // –û–ø–µ—Ä–∞—Ç–æ—Ä–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
  // comparisonOperatorsExample();

  // –õ–æ–≥—ñ—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏
  // logicalOperatorsExample();

  // –¢–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
  // ternaryOperatorExample();

  // –û–ø–µ—Ä–∞—Ç–æ—Ä–∏ –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è
  // assignmentOperatorsExample();

  // –£–º–æ–≤–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó if-else
  // ifElseExample();

  // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è switchStatement
  // switchStatementExample();

  // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è switchExpression
  // switchExpressionExample();

  // –¶–∏–∫–ª–∏ for, while, do-while, for-in
  // forLoopExample();
  // whileLoopExample();
  // doWhileLoopExample();
  // forInExample();

  // Break, continue, return
  breakContinueReturnExample();
}

// üìç –ú–∞—Ç–µ–º–∞—Ç–∏—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏
void mathOperatorsExample() {
  int a = 25;
  double b = 5.3;
  print('–î–æ–¥–∞–≤–∞–Ω–Ω—è: ${a + b}');
  print('–í—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è: ${a - b}');
  print('–ú–Ω–æ–∂–µ–Ω–Ω—è: ${a * b}');
  print('–î—ñ–ª–µ–Ω–Ω—è: ${a / b}');
  print('–¶—ñ–ª–æ—á–∏—Å–µ–ª—å–Ω–µ –¥—ñ–ª–µ–Ω–Ω—è: ${a ~/ b}');
  print('–ó–∞–ª–∏—à–æ–∫ –≤—ñ–¥ –¥—ñ–ª–µ–Ω–Ω—è: ${a % b}');

  print('');
  print('–û—Ä—É–≥–ª–µ–Ω–Ω—è –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–µ: ${b.round()}');
  print('–û—Ä—É–≥–ª–µ–Ω–Ω—è –≤–≥–æ—Ä—É: ${b.ceil()}');
  print('–û—Ä—É–≥–ª–µ–Ω–Ω—è –≤–Ω–∏–∑: ${b.floor()}');
  print('–ó—Ä—É—á–Ω–∏–π –≤–∏–≤—ñ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å: ${b.toStringAsFixed(2)}');
}

// üìç –û–ø–µ—Ä–∞—Ç–æ—Ä–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
void comparisonOperatorsExample() {
  int a = 88;
  int b = 33;
  print('a == b: ${a == b}');
  print('a != b: ${a != b}');
  print('a > b: ${a > b}');
  print('a < b: ${a < b}');
  print('a >= b: ${a >= b}');
  print('a <= b: ${a <= b}');
}

// üìç –õ–æ–≥—ñ—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏
void logicalOperatorsExample() {
  bool hasMembership = true;
  bool hasGuestPass = false;
  bool gymIsOpen = true;

  bool canEnterGym = (hasMembership || hasGuestPass) && gymIsOpen;
  bool needsToBuyMembership = !hasMembership && !hasGuestPass;
  bool cannotVisitGym = !gymIsOpen;

  print('–ß–∏ –º–æ–∂—É —è –∑–∞–π—Ç–∏ —É —Å–ø–æ—Ä—Ç–∑–∞–ª? $canEnterGym');
  print('–ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∫—É–ø–∏—Ç–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç? $needsToBuyMembership');
  print('–ß–∏ —Å–ø–æ—Ä—Ç–∑–∞–ª –∑–∞–∫—Ä–∏—Ç–∏–π? $cannotVisitGym');
}

// üìç –¢–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
void ternaryOperatorExample() {
  bool isWeekend = true;

  // –ó–≤–∏—á–∞–π–Ω–∏–π if-else
  String activity;
  if (isWeekend) {
    activity = '–í—ñ–¥–ø–æ—á–∏–≤–∞—é';
  } else {
    activity = '–ü—Ä–∞—Ü—é—é';
  }
  print('–©–æ —è —Ä–æ–±–ª—é —Å—å–æ–≥–æ–¥–Ω—ñ (if-else)? $activity');

  // –¢–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
  String activityTernary = isWeekend ? '–í—ñ–¥–ø–æ—á–∏–≤–∞—é' : '–ü—Ä–∞—Ü—é—é';
  print('–©–æ —è —Ä–æ–±–ª—é —Å—å–æ–≥–æ–¥–Ω—ñ (—Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä)? $activityTernary');
}

// üìç –û–ø–µ—Ä–∞—Ç–æ—Ä–∏ –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è
void assignmentOperatorsExample() {
  int number = 12;

  number += 5;
  print('–ü—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è: $number');

  number -= 3;
  print('–ü—ñ—Å–ª—è –≤—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è: $number');

  number *= 2;
  print('–ü—ñ—Å–ª—è –º–Ω–æ–∂–µ–Ω–Ω—è: $number');

  number ~/=
      5; // 12/5=2, –∑–∞–ª–∏—à–æ–∫ 2 // –î—ñ–ª–µ–Ω–Ω—è, –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —Ü—ñ–ª–æ—á–∏—Å–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
  print('–ü—ñ—Å–ª—è —Ü—ñ–ª–æ—á–∏—Å–µ–ª—å–Ω–æ–≥–æ –¥—ñ–ª–µ–Ω–Ω—è: $number');

  number %= 7; // –û—Ç—Ä–∏–º–∞—Ç–∏ –æ—Å—Ç–∞—á—É –≤—ñ–¥ —Ü—ñ–ª–æ—á–∏—Å–µ–ª—å–Ω–æ–≥–æ –¥—ñ–ª–µ–Ω–Ω—è (–∑–∞ –º–æ–¥—É–ª–µ–º)
  print('–ü—ñ—Å–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—É: $number');
}

// üìç –£–º–æ–≤–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó if-else
void ifElseExample() {
  int age = 18;

  if (age >= 18) {
    print('–ü–æ–≤–Ω–æ–ª—ñ—Ç–Ω—ñ–π');
  } else {
    print('–ù–µ–ø–æ–≤–Ω–æ–ª—ñ—Ç–Ω—ñ–π');
  }
}

// üìç –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è switch Statement
void switchStatementExample() {
  String day = '—Å–µ—Ä–µ–¥–∞';

  switch (day) {
    case '–ø–æ–Ω–µ–¥—ñ–ª–æ–∫':
      print('–ü–æ—á–∞—Ç–æ–∫ —Ç–∏–∂–Ω—è');
    case '–ø º—è—Ç–Ω–∏—Ü—è':
      print('–ö—ñ–Ω–µ—Ü—å —Ä–æ–±–æ—á–æ–≥–æ —Ç–∏–∂–Ω—è');
    case '—Å—É–±–æ—Ç–∞':
    case '–Ω–µ–¥—ñ–ª—è':
      print('–í–∏—Ö—ñ–¥–Ω–∏–π');
    default:
      print('–ó–≤–∏—á–∞–π–Ω–∏–π —Ä–æ–±–æ—á–∏–π –¥–µ–Ω—å');
  }
}

// üìç –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è switch expression (new come with Dart3+)
void switchExpressionExample() {
  String day = '–ø–æ–Ω–µ–¥—ñ–ª–æ–∫';

  final willGoToWork = switch (day) {
    '—Å—É–±–æ—Ç–∞' || '–Ω–µ–¥—ñ–ª—è' => false,
    _ => true,
  };

  if (willGoToWork) {
    print('–°—å–æ–≥–æ–¥–Ω—ñ –ø—ñ–¥—É –Ω–∞ —Ä–æ–±–æ—Ç—É');
  } else {
    print('–°—å–æ–≥–æ–¥–Ω—ñ –Ω–µ –ø—ñ–¥—É –Ω–∞ —Ä–æ–±–æ—Ç—É');
  }
}

// üìç –¶–∏–∫–ª for
void forLoopExample() {
  for (int i = 0; i < 5; i++) {
    print('–Ü–Ω–¥–µ–∫—Å: $i');
  }
}

// üìç –¶–∏–∫–ª while
void whileLoopExample() {
  int counter = 0;
  while (counter < 3) {
    print('–õ—ñ—á–∏–ª—å–Ω–∏–∫: $counter');
    counter++;
  }
}

// üìç –¶–∏–∫–ª do-while
void doWhileLoopExample() {
  int number = 5;
  do {
    print('–ß–∏—Å–ª–æ: $number');
    number--;
  } while (number > 0);
}

// –¶–∏–∫–ª for-in
void forInExample() {
  List<int> nums = [1, 2, 33, 43, 88];

  for (var item in nums) {
    print(item);
  }
}

// üìç Break, continue, return
void breakContinueReturnExample() {
  for (int i = 0; i < 5; i++) {
    if (i == 2) {
      continue;
    }
    if (i == 4) {
      print('–î–æ—Å—è–≥–Ω—É—Ç–æ –º–µ–∂—ñ, –≤–∏—Ö—ñ–¥ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é "break".');
      break;
    }
    print('–ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: $i');
  }

  print('–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é "return".');
  return;
}
