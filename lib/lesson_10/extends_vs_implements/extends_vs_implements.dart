// Difference between extends and implements

// ‚úÖ extends ‚Äî –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è —É—Å–ø–∞–¥–∫—É–≤–∞–Ω–Ω—è (inheritance).
// –ù–∞—Å–ª—ñ–¥—É—î —É—Å—ñ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–∞ –º–µ—Ç–æ–¥–∏ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—É (–∫—Ä—ñ–º –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö).
// –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—Ç–∏ (override) –º–µ—Ç–æ–¥–∏, —è–∫—â–æ —Ö–æ—á–µ—à –∑–º—ñ–Ω–∏—Ç–∏ –ø–æ–≤–µ–¥—ñ–Ω–∫—É.
// –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –ø–æ–≤–µ–¥—ñ–Ω–∫–∏.

void main() {
  Bird b = Bird();
  b.move(); // ‚úÖ —É—Å–ø–∞–¥–∫–æ–≤–∞–Ω–æ –∑ Animal
  b.fly(); // ‚úÖ –º–µ—Ç–æ–¥ Bird –≤–ª–∞—Å–Ω–∏–π
}

class Animal {
  void move() {
    print('–†—É—Ö–∞—î—Ç—å—Å—è...');
  }
}

class Bird extends Animal {
  void fly() {
    print('–õ–µ—Ç–∏—Ç—å...');
  }
}

// ‚úÖ implements ‚Äî –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
// –ù–µ –Ω–∞—Å–ª—ñ–¥—É—î —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é ‚Äî –ª–∏—à–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–∫–æ–Ω—Ç—Ä–∞–∫—Ç).
// –ü–æ—Ç—Ä—ñ–±–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –í–°–Ü –º–µ—Ç–æ–¥–∏ –≤—Ä—É—á–Ω—É.
// –ß–∞—Å—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ —á–∏ –∞–±—Å—Ç—Ä–∞–∫—Ü—ñ–π.

abstract class Flyer {
  void fly();
}

class Plane implements Flyer {
  @override
  void fly() {
    print('–õ–µ—Ç–∏—Ç—å —è–∫ –ª—ñ—Ç–∞–∫ ‚úàÔ∏è');
  }
}

// | –û–∑–Ω–∞–∫–∞                               | `extends`                                    | `implements`                                    |
// | ------------------------------------ | -------------------------------------------- | ----------------------------------------------- |
// | –ù–∞—Å–ª—ñ–¥—É—î —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é?                 | ‚úÖ –¢–∞–∫                                        | ‚ùå –ù—ñ                                            |
// | –ú–æ–∂–µ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∏—Ç–∏ –º–µ—Ç–æ–¥–∏?           | ‚úÖ –¢–∞–∫                                        | ‚úÖ –¢–∞–∫ (–∞–ª–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏)             |
// | –ß–∏ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ —Ä–µ–∞–ª—ñ–∑–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥–∏? | ‚ùå –ù—ñ                                         | ‚úÖ –¢–∞–∫                                           |
// | –ö–æ–ª–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏?                | –ö–æ–ª–∏ —Ö–æ—á–µ—à **—Ä–æ–∑—à–∏—Ä–∏—Ç–∏** —ñ—Å–Ω—É—é—á–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª | –ö–æ–ª–∏ —Ä–µ–∞–ª—ñ–∑–æ–≤—É—î—à **–∫–æ–Ω—Ç—Ä–∞–∫—Ç** –∞–±–æ **—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å** |
// | –°–∫—ñ–ª—å–∫–∏ –∫–ª–∞—Å—ñ–≤ –º–æ–∂–Ω–∞ –Ω–∞—Å–ª—ñ–¥—É–≤–∞—Ç–∏?    | ‚ùó –õ–∏—à–µ **–æ–¥–∏–Ω** (`extends`)                  | ‚úÖ –°–∫—ñ–ª—å–∫–∏ –∑–∞–≤–≥–æ–¥–Ω–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ (`implements`)   |

// üß† –ê–Ω–∞–ª–æ–≥—ñ—è:
// extends = "–Ø —î –±—ñ–ª—å—à –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞ –≤–µ—Ä—Å—ñ—è —Ç–µ–±–µ"
// implements = "–Ø –æ–±—ñ—Ü—è—é –≤–µ—Å—Ç–∏ —Å–µ–±–µ —Ç–∞–∫ —Å–∞–º–æ, —è–∫ —Ç–∏ –æ–ø–∏—Å–∞–≤"

// Flutter-–ø—Ä–∏–∫–ª–∞–¥:

abstract interface class AppState {
  void render();
}

class LoadingState implements AppState {
  @override
  void render() => print('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...');
}

class ErrorState implements AppState {
  @override
  void render() => print('–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫...');
}
