// abstract interface

abstract interface class SomeInterface {}

// –©–æ —Ü–µ —Ç–∞–∫–µ?
// –¶–µ –Ω–æ–≤–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —É Dart (–∑ –≤–µ—Ä—Å—ñ—ó 3), —è–∫–∏–π —á—ñ—Ç–∫–æ –≤–∫–∞–∑—É—î, —â–æ –∫–ª–∞—Å:
// —î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º (contract),
// —ñ –π–æ–≥–æ –º–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑–æ–≤—É–≤–∞—Ç–∏ (implements),
// –∞–ª–µ –Ω–µ –º–æ–∂–Ω–∞ —É—Å–ø–∞–¥–∫–æ–≤—É–≤–∞—Ç–∏ (extends) –¥–ª—è –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –ø–æ–≤–µ–¥—ñ–Ω–∫–∏.
// –¶–µ —è–∫ –¥–æ–≥–æ–≤—ñ—Ä, —â–æ –∫–∞–∂–µ: "–¢–∏ –º–∞—î—à —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –í–°–ï, —â–æ —è –æ–ø–∏—Å—É—é. –ë–µ–∑ –≤–∏–Ω—è—Ç–∫—ñ–≤."

// –ù–∞–≤—ñ—â–æ —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ?
// –ö–æ–ª–∏ —Ç–∏ —Ö–æ—á–µ—à —Å—Ç–≤–æ—Ä–∏—Ç–∏ —á–∏—Å—Ç–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –±–µ–∑ –∂–æ–¥–Ω–æ—ó —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó;
// –î–ª—è —á–∏—Å—Ç–æ—ó –∞–±—Å—Ç—Ä–∞–∫—Ü—ñ—ó ‚Äî 100% –∫–æ–Ω—Ç—Ä–∞–∫—Ç;
// –ö–æ–ª–∏ —Ç—Ä–µ–±–∞ –∑–∞—Ö–∏—Å—Ç–∏—Ç–∏ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é (—â–æ–± –Ω—ñ—Ö—Ç–æ –Ω–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–≤ –ø–æ–≤–µ–¥—ñ–Ω–∫—É, –ª–∏—à–µ —Ä–µ–∞–ª—ñ–∑–æ–≤—É–≤–∞–≤ API).

// | –û–∑–Ω–∞–∫–∞                           | `abstract class` | `abstract interface class` |
// | -------------------------------- | ---------------- | -------------------------- |
// | –ú–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ (`implements`) | ‚úÖ                | ‚úÖ                          |
// | –ú–æ–∂–Ω–∞ –Ω–∞—Å–ª—ñ–¥—É–≤–∞—Ç–∏ (`extends`)    | ‚úÖ                | ‚ùå                          |
// | –ú–æ–∂–µ –º–∞—Ç–∏ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é –º–µ—Ç–æ–¥—ñ–≤     | ‚úÖ                | üîÅ –ú–æ–∂–Ω–∞, –∞–ª–µ —Ü–µ —Ä—ñ–¥–∫–æ     |
// | –í–∏–º–∞–≥–∞—î —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≤—Å—ñ –º–µ—Ç–æ–¥–∏?  | ‚ùå –ù—ñ             | ‚úÖ –¢–∞–∫                      |

abstract interface class Logger {
  void log(String message);
}

// –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ implements
class ConsoleLogger implements Logger {
  @override
  void log(String message) {
    print('–õ–æ–≥: $message');
  }
}

void main() {
  Logger logger = ConsoleLogger();
  logger.log('–ü—Ä–∏–≤—ñ—Ç —ñ–∑ Dart!');
  print('------------------');
  Logger2 logger2 = ConsoleLogger2();
  logger2.log('–í—Å–µ –ø—Ä–∞—Ü—é—î');
  logger2.warn('–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫');
}

// –ü–æ—è—Å–Ω–µ–Ω–Ω—è:
// Logger ‚Äî —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —è–∫ —É Java —á–∏ TypeScript;
// ConsoleLogger —Ä–µ–∞–ª—ñ–∑—É—î –π–æ–≥–æ, —Ç–æ–±—Ç–æ –∑–æ–±–æ–≤‚Äô—è–∑–∞–Ω–∏–π —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≤—Å—ñ –º–µ—Ç–æ–¥–∏;
// –¶–µ –Ω–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –ø–æ–≤–µ–¥—ñ–Ω–∫–∏, –∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É.

// ‚ùóÔ∏è –ü–æ–ø—É–ª—è—Ä–Ω–∞ –ø–æ–º–∏–ª–∫–∞:
// class MyLogger extends Logger {} // ‚ùå –ü–æ–º–∏–ª–∫–∞: –Ω–µ –º–æ–∂–Ω–∞ extends –¥–ª—è interface
// abstract interface class –Ω–µ –¥–æ–∑–≤–æ–ª—è—î extends, –ª–∏—à–µ implements.

// üî∏ –¶–µ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚Äî —á–∏—Å—Ç–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç
abstract interface class Logger2 {
  void log(String message);
  void warn(String message);
}

// üîπ –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É (implements)
class ConsoleLogger2 implements Logger2 {
  @override
  void log(String message) {
    print('–õ–û–ì: $message');
  }

  @override
  void warn(String message) {
    print('‚ö†Ô∏è –£–í–ê–ì–ê: $message');
  }
}

// –©–æ —Ç—É—Ç –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è:
// Logger2 ‚Äî —Ü–µ abstract interface class (—Ç—ñ–ª—å–∫–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç).
// ConsoleLogger2 —Ä–µ–∞–ª—ñ–∑—É—î Logger2 —á–µ—Ä–µ–∑ implements, —Ç–æ–º—É –ø–æ–≤–∏–Ω–µ–Ω —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≤—Å—ñ –º–µ—Ç–æ–¥–∏.
// –£ main() –º–∏ –ø—Ä–∞—Ü—é—î–º–æ –∑ –æ–±'—î–∫—Ç–æ–º —á–µ—Ä–µ–∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚Äî —Ü–µ –∫–ª–∞—Å–∏—á–Ω–µ –û–û–ü.
