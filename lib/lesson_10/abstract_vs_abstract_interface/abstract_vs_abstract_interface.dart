// When use abstract and abstract interface

// ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π abstract class, –∫–æ–ª–∏:
// üîß –¢–∏ –¥–∞—î—à —á–∞—Å—Ç–∫–æ–≤—É —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é;
// ü§ù –•–æ—á–µ—à, —â–æ–± –ø—ñ–¥–∫–ª–∞—Å–∏ —É—Å–ø–∞–¥–∫—É–≤–∞–ª–∏ –ø–æ–≤–µ–¥—ñ–Ω–∫—É;
// üëÄ –ü–∏—à–µ—à –±–∞–∑–æ–≤–∏–π –∫–ª–∞—Å, —è–∫–∏–π –±—É–¥–µ —Ä–æ–∑—à–∏—Ä—é–≤–∞—Ç–∏—Å—è;
// üì¶ –ß–∞—Å—Ç–æ ‚Äî –¥–ª—è shared logic, default —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ–π, –∞–±–æ —à–∞–±–ª–æ–Ω–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤.

// üß© –ü—Ä–∏–∫–ª–∞–¥–∏:

abstract class BasePage {
  void buildContent();

  void showFooter() {
    print('¬©2025 MyApp');
  }
}

class HomePage extends BasePage {
  @override
  void buildContent() {
    print('–í—ñ–¥–æ–±—Ä–∞–∂–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏');
  }
}

// –ü–æ—Ç—ñ–º —É Flutter —Ü–µ–π –∫–ª–∞—Å –º–æ–∂–Ω–∞ —Ä–æ–∑—à–∏—Ä–∏—Ç–∏ —É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.

// ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π abstract interface class, –∫–æ–ª–∏:
// ‚úçÔ∏è –•–æ—á–µ—à —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –±–µ–∑ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó;
// üõ°Ô∏è –•–æ—á–µ—à –∑–∞–±–æ—Ä–æ–Ω–∏—Ç–∏ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è, –¥–æ–∑–≤–æ–ª—è—é—á–∏ —Ç—ñ–ª—å–∫–∏ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é;
// üìÑ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å —è–∫ API;
// üß™ –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–±–æ Mock-–∫–ª–∞—Å—ñ–≤;
// üí° –¶–µ —è–∫ "–æ–±—ñ—Ü—è–Ω–∫–∞" ‚Äî —Ü–µ–π –∫–ª–∞—Å **–Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏—Ç—å, –∞–ª–µ –≤–∫–∞–∑—É—î, —â–æ –º–∞—î –±—É—Ç–∏ –∑—Ä–æ–±–ª–µ–Ω–æ".

// üß© –ü—Ä–∏–∫–ª–∞–¥–∏:
abstract interface class UserRepository {
  Future<String> getUserName();
}

class FirebaseUserRepository implements UserRepository {
  @override
  Future<String> getUserName() async => '–Ü–º‚Äô—è –∑ Firebase';
}

// –ê –¥–∞–ª—ñ: FirebaseRepository implements Repository –∞–±–æ MockRepository.

// | –°–∏—Ç—É–∞—Ü—ñ—è                                        | –©–æ –æ–±—Ä–∞—Ç–∏                  |
// | ----------------------------------------------- | -------------------------- |
// | –ü–æ—Ç—Ä—ñ–±–Ω–∞ –±–∞–∑–æ–≤–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∞ + —Å—Ç—Ä—É–∫—Ç—É—Ä–∞           | `abstract class`           |
// | –ü–æ—Ç—Ä—ñ–±–µ–Ω —á–∏—Å—Ç–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç                        | `abstract interface class` |
// | –•–æ—á–µ—à –º–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –∑ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—î—é (–Ω–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ñ) | `abstract class`           |
// | –•–æ—á–µ—à –∑–º—É—Å–∏—Ç–∏ —Ä–µ–∞–ª—ñ–∑–æ–≤—É–≤–∞—Ç–∏ –≤—Å–µ                 | `abstract interface class` |
// | –•–æ—á–µ—à –∑–∞–ø–æ–±—ñ–≥—Ç–∏ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—é –ª–æ–≥—ñ–∫–∏             | `abstract interface class` |

// | –û–∑–Ω–∞–∫–∞                             | `abstract class`                 | `abstract interface class`      |
// | ---------------------------------- | -------------------------------- | ------------------------------- |
// | –¢–∏–ø –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è                    | –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å —ñ–∑ –ª–æ–≥—ñ–∫–æ—é          | –ß–∏—Å—Ç–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç (—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å)     |
// | –ú–æ–∂–Ω–∞ –Ω–∞—Å–ª—ñ–¥—É–≤–∞—Ç–∏ (`extends`)      | ‚úÖ –¢–∞–∫                            | ‚ùå –ù—ñ                            |
// | –ú–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ (`implements`)   | ‚úÖ –¢–∞–∫                            | ‚úÖ –¢–∞–∫                           |
// | –ú–∞—î —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é –º–µ—Ç–æ–¥—ñ–≤             | ‚úÖ –ú–æ–∂–µ                           | ‚ùå –ù–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ, –∞–ª–µ –º–æ–∂–Ω–∞     |
// | –û–±–æ–≤'—è–∑–∫–æ–≤–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤ –ø—ñ–¥–∫–ª–∞—Å–∞—Ö | ‚ùå –ù–µ –≤—Å—ñ –º–µ—Ç–æ–¥–∏                  | ‚úÖ –£—Å—ñ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ñ –º–µ—Ç–æ–¥–∏         |
// | –ü–æ—à–∏—Ä–µ–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è              | –ë–∞–∑–æ–≤—ñ –∫–ª–∞—Å–∏, –ª–æ–≥—ñ–∫–∞, UI —à–∞–±–ª–æ–Ω–∏ | –†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó, API, state, mock-–∏ |

// | –û–ø–µ—Ä–∞—Ü—ñ—è     | –©–æ –æ–∑–Ω–∞—á–∞—î                      | –©–æ –æ—Ç—Ä–∏–º—É—î—à                          |
// | ------------ | ------------------------------- | ------------------------------------ |
// | `extends`    | –ù–∞—Å–ª—ñ–¥—É—î—à –ª–æ–≥—ñ–∫—É –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—É | –ú–µ—Ç–æ–¥–∏, –∑–º—ñ–Ω–Ω—ñ, –ø–æ–≤–µ–¥—ñ–Ω–∫–∞            |
// | `implements` | –†–µ–∞–ª—ñ–∑—É—î—à –∫–æ–Ω—Ç—Ä–∞–∫—Ç              | –õ–∏—à–µ —Å–∏–≥–Ω–∞—Ç—É—Ä–∏, —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é –ø–∏—à–µ—à —Å–∞–º |

// | –©–æ –º–æ–¥–µ–ª—é—î—à                                             | –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π                              |
// | ------------------------------------------------------- | ----------------------------------------- |
// | –ë–∞–∑–æ–≤–∏–π UI –∑ –∑–∞–≥–∞–ª—å–Ω–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ `BasePage`) | `abstract class` + `extends`              |
// | –ö–æ–Ω—Ç—Ä–∞–∫—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é (`UserRepository`)                 | `abstract interface class` + `implements` |
// | –ú–æ–¥–µ–ª—å —Å—Ç–∞–Ω—É (`AppState`)                               | `abstract interface class` + `implements` |
// | Mock-–∫–ª–∞—Å –¥–ª—è —Ç–µ—Å—Ç—ñ–≤                                    | `abstract interface class` + `implements` |
