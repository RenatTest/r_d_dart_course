// Class modifiers interface

// üîé –©–æ —Ç–∞–∫–µ interface?
// interface –≤–∏–∑–Ω–∞—á–∞—î –∫–æ–Ω—Ç—Ä–∞–∫—Ç, —è–∫–∏–π —ñ–Ω—à—ñ –∫–ª–∞—Å–∏ –º–∞—é—Ç—å —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —á–µ—Ä–µ–∑ implements.
// –ù–∞ –≤—ñ–¥–º—ñ–Ω—É –≤—ñ–¥ abstract, interface:
// –ú–æ–∂–µ –±—É—Ç–∏ –Ω–µ abstract (—Ç–æ–±—Ç–æ –º—ñ—Å—Ç–∏—Ç–∏ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é),
// –ê–ª–µ –≤—Å—ñ –º–µ—Ç–æ–¥–∏ –º–∞—é—Ç—å –±—É—Ç–∏ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –ø—Ä–∏ implements ‚Äî –Ω–∞–≤—ñ—Ç—å —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ!

// ‚úÖ –©–æ –¥–æ–∑–≤–æ–ª–µ–Ω–æ:
// | –û–ø–µ—Ä–∞—Ü—ñ—è           | –î–æ–∑–≤–æ–ª–µ–Ω–æ?                          |
// | ------------------ | ----------------------------------- |
// | `implements`       | ‚úÖ (–≤–∏–º–∞–≥–∞—î —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é –≤—Å—ñ—Ö –º–µ—Ç–æ–¥—ñ–≤) |
// | `extends`          | ‚úÖ                                   |
// | `mixin on`         | ‚úÖ                                   |
// | –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Å—Ç–∞–Ω—Å—É | ‚úÖ                                   |

// üìå –ü—Ä–∏–∫–ª–∞–¥:

interface class Greeter {
  void sayHello() => print('Hello!');
}

class MyGreeter implements Greeter {
  @override
  void sayHello() => print('–ü—Ä–∏–≤—ñ—Ç!');
}
// –ù–∞–≤—ñ—Ç—å —è–∫—â–æ Greeter –º–∞—î —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é ‚Äî –≤–æ–Ω–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ implements.

// üß† –ß–∞—Å—Ç—ñ –ø–æ–º–∏–ª–∫–∏:
// ‚ùóÔ∏è –õ—é–¥–∏ –¥—É–º–∞—é—Ç—å, —â–æ interface class –ø—Ä–∞—Ü—é—î —è–∫ abstract class –∑ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—î—é. –ê–ª–µ:
// –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —ñ–≥–Ω–æ—Ä—É—î—Ç—å—Å—è –ø—Ä–∏ implements ‚Äî —Ç–æ–º—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ª–∏—à–µ –¥–ª—è API-–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ñ–≤.
// –Ø–∫—â–æ —Ö–æ—á–µ—à, —â–æ–± —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–µ—Ä–µ–π—à–ª–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π extends, –∞–±–æ mixin, –∞–±–æ –ø—Ä–æ—Å—Ç–æ abstract class.

// üß∞ –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —É Flutter:
// –¢–∏–ø–æ–≤—ñ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó, BLoC-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏, DataSource:

interface class UserRepository {
  // Future<User> getUser();
}

class FirebaseUserRepository implements UserRepository {
  // @override
  // Future<User> getUser() {
  //   // Firebase fetch
  // }
}
